import { Checkbox, Table, TableBody, TableContainer, TableHead } from '@mui/material'
import { DeleteForeverRounded } from '@mui/icons-material'
import React, { useEffect, useState } from 'react'
import {  updateAdmin } from '../../RTK/RTKApi'
import Popover from '@mui/material/Popover';
import Typography from '@mui/material/Typography';
import Button from '@mui/material/Button';
import { useDispatch, useSelector } from 'react-redux'
import { Link } from 'react-router-dom'
import {getOverAllPapers, getProgram, getSemester} from '../../services/Api'
import { DeleteUserbyId, deleteUserSubject, getUsers, setAdminStatus } from '../../RTK/Slices/AuthSlice';
import AllDashPapers from './AllDashPapers';

const Dashboard = () => {
    const mode = useSelector((state) => state.mode.mode)
    const users = useSelector((state) => state.users.users)
    const user = JSON.parse(localStorage.getItem("user"));
    const [isOpen, setIsOpen] = useState(null)
    const dispatch = useDispatch();

    useEffect(() => {
        dispatch(getUsers())
    }, [])


    const handleAdmin = (userId) => {
        dispatch(setAdminStatus(userId))
    }
    const handleDeleteSubject = (subject) => {
        dispatch(deleteUserSubject(subject))
    }

    const handleDeleteUser = (userId,UserName) => {
        if(window.confirm(`Papers Generated By ${UserName}, also Delete. `)){
            dispatch(DeleteUserbyId(userId))
        }
    }

    // For styling some elements
    const th = {
        fontWeight: '400',
        fontSize: '18px',
        color: mode === 'dark' ? '#fff' : '#565656',
        borderTop: "1px solid #a4a4a4e7",
        borderLeft: "1px solid #a4a4a4e7",
        textAlign: "center",
        padding: '20px'

    }
    const td = {
        fontWeight: '600',
        fontSize: '18px',
        textAlign: "center",
        borderBottom: '1px solid #a4a4a4e7',
        borderLeft: "1px solid #a4a4a4e7",
        padding: '20px',
        color: mode === 'dark' ? '#fff' : '#7209B7'
    }

    return (
        <div className={`w-full min-h-screen mb-28 px-12 ${mode === 'light' ? 'bg-bgColor' : '' }`} >
            <div onClick={() => setIsOpen(null)} className={`absolute left-0 top-0 w-full h-[200vh] bg-black/30 transition-all duration-1000 z-40 ${isOpen ? 'scale-100 opacity-100 block' : 'scale-50 opacity-0 hidden'}`}></div>
            <h1 className='bg-vmost-light text-most-dark w-[90%] rounded-md p-5 mx-auto text-[2.5rem] text-center'>Admin Dashboard of Paper Generator</h1>

            {/* All User Seen by Admin */}
            {
                user.superAdmin && (
                    <div className=' w-[98%] sm:w-[94%] mx-auto px-[14px] py-[10px] flex gap-5 flex-col md:flex-row justify-between items-start'>
                        
                        <div className='w-full h-full p-3 relative' >
                            <h2 className='bg-primary mb-1 text-white text-center p-5 rounded-md text-[2rem]'>Sign In Users</h2>                            
                            <TableContainer>
                                <Table>
                                    <TableHead className='text-white'>
                                        <tr>
                                            <td style={td} className='!border-l-neutral-50' >S.No</td>
                                            <td style={td}>Name</td>
                                            <td style={td} >Email</td>
                                            <td style={td} >Admin Status</td>
                                            <td style={td} className='w-1/3' >Subjects</td>
                                            <td style={td}>Delete</td>
                                        </tr>
                                    </TableHead>
                                    <TableBody>
                                        {
                                            users && users.filter(user => !user.superAdmin).map((user, index) => (
                                                <tr key={index}>
                                                    <th style={th} className='!border-l-neutral-50 ' >{index + 1}</th>
                                                    <th style={th} >{user.name}</th>
                                                    <th style={th} >{user.email}</th>
                                                    {/* Admin Status handling */}
                                                    <th style={th} className='w-16' align="center">
                                                        <Checkbox style={{ color: "#7209B7" }} onChange={() => handleAdmin(user._id)} checked={user.isAdmin} />
                                                    </th>
                                                    {/* User subjects handling  */}
                                                    <th style={th} className='p-2'>
                                                        <button className='bg-vmost-light/50 text-dark px-4 py-1.5 rounded-md' onClick={() => setIsOpen(user._id)}>Subjects</button>
                                                        {
                                                            isOpen === user._id ?
                                                                <>
                                                                    <div className="w-[50vw]  z-50 absolute top-[20%] left-[25%] border border-gray-500 shadow-2xl drop-shadow-xl bg-white rounded-2xl p-3 ">
                                                                        <span className="absolute -top-10 -right-9 w-14 h-14 grid place-items-center border bg-white rounded-full text-primary drop-shadow-2xl shadow-inner  cursor-pointer p-1 lg:p-4" onClick={() => setIsOpen(null)}>X</span>
                                                                        {
                                                                            user?.subjects?.length > 0 ? user.subjects.map((subject) =>
                                                                            (
                                                                                <div key={subject._id} className="flex items-end pt-5 pl-1 pb-1 justify-between border-b border-gray-400">
                                                                                    <p className="text-lg text-primary ">{subject?.newpaper}</p>
                                                                                    <p className="text-sm  inline-block text-gray-500">({subject?.semester?.semester} sem, {subject?.program?.program})</p>
                                                                                    <button onClick={() => handleDeleteSubject({ subjectId: subject._id, userId: user._id })}><DeleteForeverRounded className='text-red-600' /></button>
                                                                                </div>
                                                                            )
                                                                            ) : (
                                                                                <div className="text-xl text-gray-500">No Subjects Found</div>
                                                                            )
                                                                        }
                                                                    </div>
                                                                </>
                                                                : null
                                                        }
                                                        <Link to={`/dashboard/addusersubjects/${user._id}`} className='bg-primary inline-block float-right text-white text-base rounded-md py-2 px-3' >Add</Link>
                                                    </th>
                                                    <th style={th}>
                                                        <span onClick={() => handleDeleteUser(user._id,user.name)} className='border hover:bg-slate-200 cursor-pointer p-3 rounded-full'>
                                                            <DeleteForeverRounded style={{ color: 'red' }} />
                                                        </span>
                                                    </th>
                                                </tr>
                                            ))
                                        }
                                    </TableBody>
                                </Table>
                            </TableContainer>
                        </div>
                    </div>
                )
            }

            {/* All Questions and Papers Records */}
            <div id="papers" className="mt-5 lg:mt-14 w-[98%] min-h-[80vh] sm:w-[94%] mx-auto">
                <h2 className='w-full bg-primary text-white text-[2rem] text-center rounded-md p-5'>All Submitted Papers</h2>
                <AllDashPapers />
            </div>
        </div>
    )
}

export default Dashboard;
